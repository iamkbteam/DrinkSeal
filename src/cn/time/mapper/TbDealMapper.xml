<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.time.mapper.TbDealMapper">
  <resultMap id="BaseResultMap" type="cn.time.entity.TbDeal">
    <id column="dd_id" jdbcType="CHAR" property="ddId" />
    <result column="dd_date" jdbcType="TIMESTAMP" property="ddDate" />
    <result column="total" jdbcType="REAL" property="total" />
    <result column="e_id" jdbcType="INTEGER" property="eId" />
    <result column="isMer" jdbcType="CHAR" property="ismer" />
    <result column="m_id" jdbcType="CHAR" property="mId" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dd_id, dd_date, total, e_id, isMer, m_id, point, num
  </sql>
  <select id="selectByExample" parameterType="cn.time.entity.TbDealExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_deal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_deal
    where dd_id = #{ddId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_deal
    where dd_id = #{ddId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.time.entity.TbDealExample">
    delete from tb_deal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.time.entity.TbDeal">
    insert into tb_deal (dd_id, dd_date, total, 
      e_id, isMer, m_id, point, 
      num)
    values (#{ddId,jdbcType=CHAR}, #{ddDate,jdbcType=TIMESTAMP}, #{total,jdbcType=REAL}, 
      #{eId,jdbcType=INTEGER}, #{ismer,jdbcType=CHAR}, #{mId,jdbcType=CHAR}, #{point,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.time.entity.TbDeal">
    insert into tb_deal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ddId != null">
        dd_id,
      </if>
      <if test="ddDate != null">
        dd_date,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="eId != null">
        e_id,
      </if>
      <if test="ismer != null">
        isMer,
      </if>
      <if test="mId != null">
        m_id,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ddId != null">
        #{ddId,jdbcType=CHAR},
      </if>
      <if test="ddDate != null">
        #{ddDate,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
      <if test="eId != null">
        #{eId,jdbcType=INTEGER},
      </if>
      <if test="ismer != null">
        #{ismer,jdbcType=CHAR},
      </if>
      <if test="mId != null">
        #{mId,jdbcType=CHAR},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.time.entity.TbDealExample" resultType="java.lang.Long">
    select count(*) from tb_deal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_deal
    <set>
      <if test="record.ddId != null">
        dd_id = #{record.ddId,jdbcType=CHAR},
      </if>
      <if test="record.ddDate != null">
        dd_date = #{record.ddDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=INTEGER},
      </if>
      <if test="record.ismer != null">
        isMer = #{record.ismer,jdbcType=CHAR},
      </if>
      <if test="record.mId != null">
        m_id = #{record.mId,jdbcType=CHAR},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_deal
    set dd_id = #{record.ddId,jdbcType=CHAR},
      dd_date = #{record.ddDate,jdbcType=TIMESTAMP},
      total = #{record.total,jdbcType=REAL},
      e_id = #{record.eId,jdbcType=INTEGER},
      isMer = #{record.ismer,jdbcType=CHAR},
      m_id = #{record.mId,jdbcType=CHAR},
      point = #{record.point,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.time.entity.TbDeal">
    update tb_deal
    <set>
      <if test="ddDate != null">
        dd_date = #{ddDate,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
      <if test="eId != null">
        e_id = #{eId,jdbcType=INTEGER},
      </if>
      <if test="ismer != null">
        isMer = #{ismer,jdbcType=CHAR},
      </if>
      <if test="mId != null">
        m_id = #{mId,jdbcType=CHAR},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where dd_id = #{ddId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.time.entity.TbDeal">
    update tb_deal
    set dd_date = #{ddDate,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=REAL},
      e_id = #{eId,jdbcType=INTEGER},
      isMer = #{ismer,jdbcType=CHAR},
      m_id = #{mId,jdbcType=CHAR},
      point = #{point,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER}
    where dd_id = #{ddId,jdbcType=CHAR}
  </update>
  
  
  
  <select id="findAll" resultType="cn.time.entity.TbDeal">
	select * from tb_deal where status='有效'
	</select>
  
  
  <select id="queryLike"  resultType="cn.time.entity.TbDeal">
	select * from tb_deal where status='有效'  and ( dd_id like  '%${dd_id}%' or m_id like '%${m_id}%' )
	</select>
  
  
   <update id="upDate" parameterType="cn.time.entity.TbDeal">
    update tb_deal
    set 
      total = #{total,jdbcType=REAL},
      m_id = #{m_Id,jdbcType=CHAR},
      point = #{point,jdbcType=INTEGER}  
    where dd_id = #{dd_Id,jdbcType=CHAR}
  </update>
  
  
  <!-- <delete id="deleteDeal" >
  delete from tb_deal where dd_id=${dd_id}
  </delete>
   -->
  
   <update id="deleteDeal">
    update tb_deal
	   set status="无效"  where dd_id=${dd_id}
  </update>
  
  
</mapper>