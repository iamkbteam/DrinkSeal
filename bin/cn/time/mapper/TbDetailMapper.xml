<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.time.mapper.TbDetailMapper">
  <resultMap id="BaseResultMap" type="cn.time.entity.TbDetail">
    <id column="dd_id" jdbcType="CHAR" property="ddId" />
    <id column="c_id" jdbcType="INTEGER" property="cId" />
    <id column="d_id" jdbcType="INTEGER" property="dId" />
    <result column="c_name" jdbcType="CHAR" property="cName" />
    <result column="d_name" jdbcType="CHAR" property="dName" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="REAL" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dd_id, c_id, d_id, c_name, d_name, num, price
  </sql>
  <select id="selectByExample" parameterType="cn.time.entity.TbDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.time.entity.TbDetailKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_detail
    where dd_id = #{ddId,jdbcType=CHAR}
      and c_id = #{cId,jdbcType=INTEGER}
      and d_id = #{dId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.time.entity.TbDetailKey">
    delete from tb_detail
    where dd_id = #{ddId,jdbcType=CHAR}
      and c_id = #{cId,jdbcType=INTEGER}
      and d_id = #{dId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.time.entity.TbDetailExample">
    delete from tb_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.time.entity.TbDetail">
    insert into tb_detail (dd_id, c_id, d_id, 
      c_name, d_name, num, price
      )
    values (#{ddId,jdbcType=CHAR}, #{cId,jdbcType=INTEGER}, #{dId,jdbcType=INTEGER}, 
      #{cName,jdbcType=CHAR}, #{dName,jdbcType=CHAR}, #{num,jdbcType=INTEGER}, #{price,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.time.entity.TbDetail">
    insert into tb_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ddId != null">
        dd_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="dId != null">
        d_id,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="dName != null">
        d_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ddId != null">
        #{ddId,jdbcType=CHAR},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=CHAR},
      </if>
      <if test="dName != null">
        #{dName,jdbcType=CHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.time.entity.TbDetailExample" resultType="java.lang.Long">
    select count(*) from tb_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_detail
    <set>
      <if test="record.ddId != null">
        dd_id = #{record.ddId,jdbcType=CHAR},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=INTEGER},
      </if>
      <if test="record.cName != null">
        c_name = #{record.cName,jdbcType=CHAR},
      </if>
      <if test="record.dName != null">
        d_name = #{record.dName,jdbcType=CHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_detail
    set dd_id = #{record.ddId,jdbcType=CHAR},
      c_id = #{record.cId,jdbcType=INTEGER},
      d_id = #{record.dId,jdbcType=INTEGER},
      c_name = #{record.cName,jdbcType=CHAR},
      d_name = #{record.dName,jdbcType=CHAR},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.time.entity.TbDetail">
    update tb_detail
    <set>
      <if test="cName != null">
        c_name = #{cName,jdbcType=CHAR},
      </if>
      <if test="dName != null">
        d_name = #{dName,jdbcType=CHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
    </set>
    where dd_id = #{ddId,jdbcType=CHAR}
      and c_id = #{cId,jdbcType=INTEGER}
      and d_id = #{dId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.time.entity.TbDetail">
    update tb_detail
    set c_name = #{cName,jdbcType=CHAR},
      d_name = #{dName,jdbcType=CHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL}
    where dd_id = #{ddId,jdbcType=CHAR}
      and c_id = #{cId,jdbcType=INTEGER}
      and d_id = #{dId,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectById"  resultType="cn.time.entity.TbDetail">
	select * from tb_detail where dd_id =  '${dd_id}' 
	</select>
  
  
  
</mapper>